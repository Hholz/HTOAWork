<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ht.mapper.education.EduTermMapper" >
  <resultMap id="BaseResultMap" type="com.ht.popj.education.EduTerm" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="term_Name" property="termName" jdbcType="VARCHAR" />
    <result column="fall_id" property="fall_id" jdbcType="INTEGER" />
    <result column="major_id" property="major_id" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="term_remark" property="termRemark" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="fallName" property="fallName" jdbcType="VARCHAR" />
    <result column="majorName" property="majorName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, term_Name, term_remark,fall_id,major_id, code, create_time, update_time, status, remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ht.popj.education.EduTermExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from edu_term
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from edu_term
    where id = #{id,jdbcType=INTEGER} and status=1
  </select>
  <update id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    update edu_term set status = 0  
    where id = #{id,jdbcType=INTEGER}
  </update>
  <delete id="deleteByExample" parameterType="com.ht.popj.education.EduTermExample" >
    delete from edu_term
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ht.popj.education.EduTerm" >
    insert into edu_term (id, term_Name, fall_id, major_id, code, term_remark, 
      create_time, update_time, status, 
      remark)
    values (#{id,jdbcType=INTEGER}, #{termName,jdbcType=VARCHAR}, #{fall_id,jdbcType=INTEGER}, #{major_id,jdbcType=INTEGER},#{code,jdbcType=VARCHAR}, 
    #{termRemark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ht.popj.education.EduTerm" >
    insert into edu_term
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="termName != null" >
        term_Name,
      </if>
      <if test="fall_id != null" >
        fall_id,
      </if>
      <if test="major_id != null" >
        major_id,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="termRemark != null" >
        term_remark,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="termName != null" >
        #{termName,jdbcType=VARCHAR},
      </if>
       <if test="fall_id != null" >
        #{fall_id,jdbcType=INTEGER},
      </if>
       <if test="major_id != null" >
        #{major_id,jdbcType=INTEGER},
      </if>
       <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="termRemark != null" >
        #{termRemark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ht.popj.education.EduTermExample" resultType="java.lang.Integer" >
    select count(*) from edu_term
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update edu_term
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.termName != null" >
        term_Name = #{record.termName,jdbcType=VARCHAR},
      </if>
      <if test="record.termRemark != null" >
        term_remark = #{record.termRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update edu_term
    set id = #{record.id,jdbcType=INTEGER},
      term_Name = #{record.termName,jdbcType=VARCHAR},
      term_remark = #{record.termRemark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=TINYINT},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ht.popj.education.EduTerm" >
    update edu_term
    <set >
      <if test="termName != null" >
        term_Name = #{termName,jdbcType=VARCHAR},
      </if>
      <if test="termRemark != null" >
        term_remark = #{termRemark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ht.popj.education.EduTerm" >
    update edu_term
    set term_Name = #{termName,jdbcType=VARCHAR},
    	fall_id = #{fall_id,jdbcType=INTEGER},
    	major_id = #{major_id,jdbcType=INTEGER},
        code = #{code,jdbcType=VARCHAR},
      term_remark = #{termRemark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
    <select id="selectTermAll" resultMap="BaseResultMap">
		select * from edu_term where STATUS=1 GROUP BY term_name
	</select>
	<resultMap type="com.ht.popj.education.EduTerm" id="allTerm" extends="BaseResultMap">
    <!-- 一对一配置 -->
    <association property="major" javaType="com.ht.popj.education.EduMajor" column="major_id" select="com.ht.mapper.education.EduMajorMapper.selectByPrimaryKey">
 	</association>
 	<association property="fall" javaType="com.ht.popj.student.StudentFall" column="fall_id" select="com.ht.mapper.student.StudentFallMapper.selectByPrimaryKey">
 	</association>
  	</resultMap>
	<select id="selectByDynamic" resultMap="allTerm" parameterType="com.ht.popj.education.EduTerm">
		select * from edu_Term
		<where>
		    AND status=1
			<if test="id != null and id !='' and id != 0">
			AND	id = #{id}
			</if>
			<if test="major_id != null and major_id !='' and major_id != 0">
			AND	major_id = #{major_id}
			</if>
			<if test="fall_id != null and fall_id !='' and fall_id != 0">
			AND	fall_id = #{fall_id}
			</if>
			<if test="termName != null and !termName.isEmpty()">
			AND	term_Name like '%${termName}%'
			</if>
		</where>
	</select>
	
	<select id="selectByAllMajor" resultMap="BaseResultMap" parameterType="com.ht.popj.education.EduTerm">
		select m.major_name as majorName,m.id as major_id,e.* from edu_Term e 
		LEFT JOIN edu_major m on e.major_id = m.id 
		<where>
		    AND e.status=1
			<if test="major_id != null and major_id !='' and major_id != 0">
			AND	e.major_id = #{major_id}
			</if>
			<if test="fall_id != null and fall_id !='' and fall_id != 0">
			AND	e.fall_id = #{fall_id}
			</if>
			<if test="termName != null and !termName.isEmpty()">
			AND	e.term_Name like '%${termName}%'
			</if>
		</where>
			GROUP BY e.major_id
	</select>
</mapper>